<!DOCTYPE html>
<html lang="zh">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />

<title>{{opensync_title}}</title>
<link rel="icon" href="favicon.ico" type="image/ico">
<meta name="keywords" content="{{opensync_title}}">
<meta name="description" content="{{opensync_title}}">
<meta name="author" content="yinqi">
<link href="css/bootstrap.min.css" rel="stylesheet">
<link href="css/materialdesignicons.min.css" rel="stylesheet">
<link href="css/style.min.css" rel="stylesheet">
<style>
.lyear-wrapper {
    position: relative;
}
.lyear-login {
    display: flex !important;
    min-height: 100vh;
    align-items: center !important;
    justify-content: center !important;
}
.login-center {
    background: #fff;
    min-width: 38.25rem;
    padding: 2.14286em 3.57143em;
    border-radius: 5px;
    margin: 2.85714em 0;
}
.login-header {
    margin-bottom: 1.5rem !important;
}
.login-center .has-feedback.feedback-left .form-control {
    padding-left: 38px;
    padding-right: 12px;
}
.login-center .has-feedback.feedback-left .form-control-feedback {
    left: 0;
    right: auto;
    width: 38px;
    height: 38px;
    line-height: 38px;
    z-index: 4;
    color: #dcdcdc;
}
.login-center .has-feedback.feedback-left.row .form-control-feedback {
    left: 15px;
}
</style>
</head>

<body>
<div class="row lyear-wrapper">
  <div class="lyear-login">
    <div class="login-center">
      <div class="login-header text-center">
      <a href="opensync_index.html"> <img alt="light year admin" src="images/logo-sidebar.png"> </a>
      </div>
      <form action="opensync_login.html" method="get" id="formid">
        <div class="form-group has-feedback feedback-left">
          <input type="text" placeholder="请输入用户名" class="form-control" name="username" id="username" />
          <span class="mdi mdi-account form-control-feedback" aria-hidden="true"></span>
        </div>
        <div class="form-group has-feedback feedback-left">
          <input type="password" placeholder="请输入密码" class="form-control" id="password" name="password" />
          <span class="mdi mdi-lock form-control-feedback" aria-hidden="true"></span>
        </div>
        <div class="form-group has-feedback feedback-left row">
          <div class="col-xs-7">
            <input type="text" id="captcha" name="captcha" class="form-control" placeholder="请输入验证码">
            <span class="mdi mdi-check-all form-control-feedback" aria-hidden="true"></span>
          </div>
          <div class="col-xs-5">
            <canvas id="c3" class="pull-right" id="captcha" style="cursor: pointer;" title="点击刷新" alt="captcha" onclick = "create_yzm();"></canvas>
          </div>
        </div>
        <div id="tip"> </div>
        <div class="form-group">
          <button class="btn btn-block btn-primary" type="button" onclick = "login();">立即登录</button>
        </div>
      </form>
      <hr>
      <footer class="col-sm-12 text-center">
          <p class="copyright">Copyright &copy; 2019. <a target="_blank" href="/">opensync</a> All rights reserved.</p>
      </footer>
    </div>
  </div>
</div>
<script type="text/javascript" src="js/jquery.min.js"></script>
<script type="text/javascript" src="js/bootstrap.min.js"></script>
<script type="text/javascript">;</script>
</body>
</html>

<script type="text/javascript">
//定义HTTP连接对象
var xmlHttp;

//保存验证码
var str ="";

//实例化HTTP连接对象
function createXmlHttpRequest() {
    if(window.XMLHttpRequest) {
        xmlHttp = new XMLHttpRequest();
    } else if(window.ActiveXObject) {
        xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
    }
}

//发起登录请求
function login() {
    createXmlHttpRequest();
    var name = document.getElementById("username").value;
    var password = document.getElementById("password").value;
    var captcha = document.getElementById("captcha").value;
    if(name == null || name == "") {
        innerHtml("请输入用户名");
        return;
    }
    if(password == null || password == "") {
        innerHtml("请输入密码");
        return;
    }
    if(captcha == null || captcha == "") {
        innerHtml("请输入验证码");
        return;
    }
    if(captcha.toLowerCase() != str.toLowerCase()) {
        innerHtml("验证码错误");
        create_yzm();
        return;
    }
    innerHtml("");
    var url = "opensync_login.do";
    xmlHttp.open("POST", url, true);
    xmlHttp.onreadystatechange = handleResult;
    xmlHttp.setRequestHeader('Content-Type','application/x-www-form-urlencoded');
    xmlHttp.send("username=" + name + "&password=" + password);

}

//处理服务器返回的结果/更新页面
function handleResult() {
    if(xmlHttp.readyState == 4 && xmlHttp.status == 200) {
        var response = xmlHttp.responseText;

        var json = eval('(' + response + ')');
        if(json['login_result']) {
            //alert("登录成功！");
            //页面跳转
            window.location.href='opensync_index.html';
        } else {
            innerHtml("用户名/密码错误");
            create_yzm();
        }
    }
}

//插入提示语
function innerHtml(message) {
    document.getElementById("tip").innerHTML = "<span style='font-size:14px; color:red;'>" + message + "</span>";
}

//创建两个函数，返回指定范围内的随机数，随机颜色
//随机数
  function rn(min,max){
    var n = Math.random()*(max-min)+min;
    return Math.floor(n);
  }
//随机颜色
  function rc(min,max){
    var r = rn(min,max);
    var g = rn(min,max);
    var b = rn(min,max);
    return `rgb(${r},${g},${b})`;
}

function create_yzm(){
  //创建两个变量保存验证码的宽度和高度
  var w = 120;
  var h = 38;
  //将变量值赋值给canvas
  c3.width = w;
  c3.height = h;
  //获取画笔
  var ctx = c3.getContext("2d");
  //填充的背景
  ctx.fillStyle=rc(180,230);
  ctx.fillRect(0,0,w,h);
  //创建一个随机的文字[字母和数字]4个
  var pool = "QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm0123456789";
  str ="";
  for(var i = 0;i<4;i++){
    var index = Math.floor(Math.random()*pool.length);
    str +=pool[index];
  }
  //console.log(str);
  ctx.font = "36px SimHei";
  ctx.fillStyle = rc(80,180);//文字颜色
  ctx.textBaseline="top";
  ctx.fillText(str,25,0);//在（20,0）处开始填充文字
  //绘制6条干扰线
  for(var i = 0;i<6;i++){
    ctx.strokeStyle = rc(0,255);
    ctx.beginPath();
    ctx.moveTo(rn(0,w),rn(0,h));
    ctx.lineTo(rn(0,w),rn(0,h));
    ctx.stroke();
  }
  //绘制50个干扰点
  for(var i = 0;i<50;i++){
    ctx.fillStyle = rc(0,255);
    ctx.beginPath();
    ctx.arc(rn(0,w),rn(0,h),1,0,2*Math.PI);
    ctx.fill();
  }
}
window.onload = create_yzm;
</script>